#!/bin/sh
#
#  (c) 2018-2023 m4r35n357@gmail.com (Ian Smith), for licencing see the LICENCE file
#

. ./base.sh

start=$1
end=$2
steps=1000
increment=$(echo "scale=9; ($end - $start) / $steps;" | /usr/bin/bc)
samples=$3
snapshots=$4
shift 4
datalines=$(($5 + 1))
command=$*

valid=$user_dir/samples
filtered=$user_dir/chaos
for tag in X x Y y Z z
do
    >${filtered}$tag
done
snaps=$user_dir/snapshots
[ -d $snaps ] || mkdir $snaps
rm -f $snaps/*.*

xmargin=50
pwidth=$((steps + 2 * xmargin))

filter () {  # $1 is the turning point tag, $2 is the column containing its data
    data='[^ ][^ ]*'
    /bin/grep $1 $valid | /bin/sed "s/\($data\) \($data\) \($data\) .*/$p \\$2/" >>${filtered}$1
}

snap () {
/usr/bin/gnuplot << EOF
set terminal pngcairo size 1024,768
set title '$args'
set xyplane 0
set view 54.73561,$((count % 360))
set xlabel 'x'
set ylabel 'y'
set zlabel 'z'
set xrange [$X_MIN:$X_MAX]
set yrange [$Y_MIN:$Y_MAX]
set zrange [$Z_MIN:$Z_MAX]
splot '$valid' with lines
EOF
}

plot () {
/usr/bin/gnuplot << EOF
set terminal $5 size '$pwidth',640
set lmargin at screen '$xmargin.0'/'$pwidth'
set rmargin at screen '$((xmargin + steps)).0'/'$pwidth'
set grid back
set border back
set title '$args'
set xrange [$start:$end]
set format x "%.6g"
plot 1/0 lt rgb '$2' lw 3 t '$1 maxima', '${filtered}$1' lt rgb '$2' notitle w dots,\
     1/0 lt rgb '$4' lw 3 t '$1 minima', '${filtered}$3' lt rgb '$4' notitle w dots
if (GNUTERM eq 'qt') pause mouse close
EOF
}

p=$(echo "scale=9; $start;" | /usr/bin/bc)
count=0
while [ $count -le $steps ]
do
    percent=$((count / 10))
    eval $command 2>/dev/null | /usr/bin/tee $user_data | /usr/bin/tail -n $samples >$valid
    [ $snapshots = "snaps" ] && snap >$snaps/$(printf %06d%s $count)_$p.png 2>/dev/null &
    if [ $(/usr/bin/wc --lines <$user_data) -eq $datalines ]
    then
        echo -n "\r\033[1;37m $percent\033[0;37m%  \033[0;32mLatest value\033[0;37m $p"
        filter 'X' 1 &
        filter 'x' 1 &
        filter 'Y' 2 &
        filter 'y' 2 &
        filter 'Z' 3 &
        filter 'z' 3 &
    else
        echo -n "\r\033[1;37m $percent\033[0;37m%  \033[1;31mLatest value\033[0;37m $p"
    fi
    wait
    p=$(echo "$p + $increment;" | /usr/bin/bc)
    count=$((count + 1))
done
echo -n "\r                                                            \r"

plot X '#000080' x '#004040' qt &
plot Y '#008000' y '#404000' qt &
plot Z '#800000' z '#400040' qt &

plot X '#000080' x '#004040' png >${user_dir}/X.png
plot Y '#008000' y '#404000' png >${user_dir}/Y.png
plot Z '#800000' z '#400040' png >${user_dir}/Z.png

[ $snapshots = "snaps" ] && /usr/bin/ffmpeg -y -framerate 5 -pattern_type glob -i "$snaps/*.png" -c:v libx264 -pix_fmt yuv420p $user_dir/chaos-scan.mp4
