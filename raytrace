#!/bin/sh
#
# IMPORTANT: To use this you must download and build the kerr-image program at ftp://ftp.madore.org/pub/madore/misc/kerr-image.c
#            See build script for more information
#
# Example: ./h-kerr-std 6 8 .01 1000 1 0.800 1.0 0x1.e4193e70400aa1618d6a73588003p-1 0x1.6f332af8a7a45e1270ce0d557031p+0 1.0 0x1.fea400cf8eb083ea2dc0c606c15p+2 7.500 0.000 >kerr-image-input
# Example:  time -p <kerr-image-input ./raytrace
# Example:  ffmpeg -y -i RaytracingOutput/%04d.png -c:v libx264 -crf 1 raytrace.mp4
# Example:  mplayer raytrace.mp4 -fps 10
#
#  (c) 2018-2023 m4r35n357@gmail.com (Ian Smith), for licencing see the LICENCE file

lines=${1:-240}

raytracer='nice -n 10 ./kerr-image'

outputDir='RaytracingOutput'
[ ! -d $outputDir ] && mkdir $outputDir

tmp1="/tmp/$USER/raytracer-tmp-1"
tmp2="/tmp/$USER/raytracer-tmp-2"
tmp3="/tmp/$USER/raytracer-tmp-3"
tmp4="/tmp/$USER/raytracer-tmp-4"

GREY='\033[1;30m'
CYAN='\033[0;36m'
GREEN='\033[0;32m'
NC='\033[0m' # No Colour

fragment () {
    { echo -n $line | $raytracer $1 $2 >$3 2>/dev/null; } &
}

assemble () {
    wait
    cat $tmp1 $tmp2 $tmp3 $tmp4 | convert - $filename
    echo "${GREEN}${1}${NC}"
}

b1=$((lines / 4))
b2=$((lines / 2))
b3=$((3 * b1))

n=0
while read line
do
    filename=$outputDir/$(printf "%04d.png" $n)
    if [ ! -f $filename ]
    then
        trap 'echo ""; echo -n "${CYAN}Finishing $filename . . . ${NC}"; assemble "Done!"; exit' INT
        fragment $b3 $lines $tmp4
        fragment $b2 $b3 $tmp3
        fragment $b1 $b2 $tmp2
        fragment   0 $b1 $tmp1
        assemble "Written   $filename"
        trap - INT
    else
        echo "${GREY}Skipping  $filename${NC}"
    fi
    n=$((n + 1))
done
