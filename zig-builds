#!/bin/sh
#
#  (c) 2018-2022 m4r35n357@gmail.com (Ian Smith), for licencing see the LICENCE file
#
# ./zig should be a symlink to your Zig executable
#
#  Example: ./zig-builds arm-linux-musleabihf ReleaseFast
#  Example: ./zig-builds aarch64-linux-musl ReleaseFast
#  Example: ./zig-builds aarch64-linux-gnu ReleaseFast
#  Example: ./zig-builds x86_64-linux-musl ReleaseFast
#  Example: ./zig-builds i386-linux-musl ReleaseFast
#  Example: ./zig-builds x86_64-windows-gnu ReleaseFast
#
#  Example: for i in .5 0 -.5; do ./libdual-test $i 1e-18 1; ./libad-test 10 $i 1e-18 1; done >/dev/null

target=$1
opt=$2

CCOPTS="-O $opt -fsingle-threaded --strip --library c -target $target"

echo Zig version $(./zig version)

zig_build_exe="./zig build-exe -fno-lto"

for source in tsm-*.c
do
    $zig_build_exe $source ode-common.c taylor-ode.c main_tsm.c $CCOPTS
done

for source in rk4-*.c
do
    $zig_build_exe $source ode-common.c runge-kutta-ode.c main_rk4.c $CCOPTS
done

$zig_build_exe divergence.c $CCOPTS
$zig_build_exe libad-test.c ode-common.c taylor-ode.c ad.c $CCOPTS
$zig_build_exe libdual-test.c dual.c $CCOPTS

$zig_build_exe h-analysis.c symplectic.c $CCOPTS
$zig_build_exe h-kerr.c symplectic.c dual.c $CCOPTS
$zig_build_exe h-newton.c symplectic.c dual.c $CCOPTS
$zig_build_exe h-kerr-gen-particle.c dual.c $CCOPTS
$zig_build_exe h-kerr-gen-light.c $CCOPTS

ls -lh --color divergence* libad-test libdual-test tsm-* rk4-* h-*

echo OK
