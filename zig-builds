#!/bin/sh
#
#  (c) 2018-2022 m4r35n357@gmail.com (Ian Smith), for licencing see the LICENCE file
#
# ./zig should be a symlink to your Zig executable!
#
#  Example: ./zig-builds arm-linux-musleabihf ReleaseSmall
#
<<'###BLOCK-COMMENT'
 ./zig-builds $(yad --title="Zig cross-compile" --form --separator=" " --align=right \
    --field="Architecture":CB --field="Build Mode":CB --field="Strip Symbols":CHK  --field="Single-threaded":CHK \
    -- 'arm-linux-musleabihf!aarch64-linux-musl!aarch64-linux-gnu!aarch64-macos-gnu!x86_64-linux-musl!x86_64-linux-gnu!x86_64-windows-gnu' \
       'ReleaseSmall!ReleaseFast!ReleaseSafe!Debug' 'TRUE' 'TRUE')
###BLOCK-COMMENT

echo ""
echo "Zig Builds: [$0 $*]" >&2

target=$1
buildmode=$2
stripped=${3:-TRUE}
single=${4:-TRUE}

CCOPTS="-O $buildmode"
case $single in
    "TRUE") CCOPTS="$CCOPTS -fsingle-threaded";;
esac
CCOPTS="$CCOPTS --library c -target $target"
case $stripped in
    "TRUE") CCOPTS="$CCOPTS --strip";;
esac

echo ""
echo Zig version $(./zig version)
echo $CCOPTS
echo ""

zig_build_exe="./zig build-exe -fno-lto"

for source in tsm-*.c
do
    $zig_build_exe $source taylor-ode.c main-tsm.c $CCOPTS
done

$zig_build_exe divergence.c $CCOPTS
$zig_build_exe libad-test.c taylor-ode.c ad.c $CCOPTS
$zig_build_exe libdual-test.c dual.c $CCOPTS

$zig_build_exe h-analysis.c symplectic.c $CCOPTS
$zig_build_exe h-newton.c symplectic.c dual.c $CCOPTS
$zig_build_exe h-kerr.c symplectic.c dual.c main-kerr.c $CCOPTS
$zig_build_exe h-kerr-gen-particle.c h-kerr.c dual.c $CCOPTS
$zig_build_exe h-kerr-gen-light.c $CCOPTS

#$zig_build_exe h-nbody-gl.c symplectic.c h-nbody.c $CCOPTS --library GLEW --library glut --library GLU --library GL

ls -lh --color divergence* libad-test libdual-test tsm-* h-*

echo OK
