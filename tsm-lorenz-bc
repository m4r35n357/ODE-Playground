#!/bin/sh
# Lorenz system

. ./base.sh

BC_LINE_LENGTH=0 /usr/bin/bc taylor.bc << EOF
scale=$1; n=$2; h=$3; steps=$4; x=$5; y=$6; z=$7; a=$8; b=$9; c=${10}; d=${11}
output(x, y, z, 0.0)
for (step = 1; step < steps + 1; step++) {
    x[0] = x
    y[0] = y
    z[0] = z
    for (k = 0; k < n; k++) {
        x[k + 1] = a * (y[k] - x[k]) / (k + 1)
        y[k + 1] = (b * x[k] - mul(x[], z[], k) - y[k]) / (k + 1)
        z[k + 1] = (mul(x[], y[], k) - c / d * z[k]) / (k + 1)
    }
    x = horner(n, x[], h)
    y = horner(n, y[], h)
    z = horner(n, z[], h)
    output(x, y, z, h * step)
}
EOF
