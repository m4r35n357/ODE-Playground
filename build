#!/bin/sh
#
# Example:  ./clean; time -p ./build
#
# Example:  for i in .5 0 -.5; do ./libdual-test-dbg $i 1e-12; ./libad-test-dbg 10 $i 1e-12; done >/dev/null
#
#  (c) 2018-2022 m4r35n357@gmail.com (Ian Smith), for licencing see the LICENCE file

/usr/bin/ctags *.c

WARNINGS='-pedantic -Wall -Wshadow -Wpointer-arith -Wcast-qual -Wstrict-prototypes -Wmissing-prototypes -Wextra -Wconversion -Wunsuffixed-float-constants -Wredundant-decls -Wmissing-field-initializers -Wmissing-declarations -Wuninitialized'

STD='c99'

CC="/usr/bin/musl-gcc -std=$STD"
if [ x"$1" = x'clang' ]
then
    CC="/usr/bin/clang -std=$STD"
elif [ x"$1" = x'gcc' ]
then
    CC="/usr/bin/gcc -std=$STD"
elif [ x"$1" = x'tcc' ]
then
    CC="/usr/local/bin/tcc -std=$STD"
fi
${CC} --version

name='h-kerr-gen-particle'
echo " Building ${name}"
${CC} -O3 -DNDEBUG -static -o ${name}-static ${name}.c dual.c -lm -s &
${CC} -O0 $WARNINGS -g -o ${name}-dbg ${name}.c dual.c -lm &

name='h-kerr-gen-light'
echo " Building ${name}"
${CC} -O3 -DNDEBUG -static -o ${name}-static ${name}.c -lm -s &
${CC} -O0 $WARNINGS -g -o ${name}-dbg ${name}.c -lm &

build_symp () {
    name=$1
    ${CC} -O3 -DNDEBUG -static -o ${name}-static ${name}.c symplectic.c dual.c -lm -s
    ${CC} -O0 $WARNINGS -g -o ${name}-dbg ${name}.c symplectic.c dual.c -lm
}

for model in \
h-spring \
h-newton \
h-kerr \
h-analysis
do
    echo " Building ${model}"
    build_symp ${model} &
done

echo ""
build_tsm () {
    name=$1
    ${CC} -O3 -DNDEBUG -static -o ${name}-static ${name}.c taylor-ode.c main.c -lm -s
    ${CC} -O0 -g $WARNINGS -o ${name}-dbg ${name}.c taylor-ode.c main.c -lm
}

for model in \
tsm-bouali \
tsm-burke-shaw \
tsm-cosmology \
tsm-genesio-tesi \
tsm-halvorsen \
tsm-isuc \
tsm-logistic \
tsm-kom \
tsm-lorenz \
tsm-lotka-volterra \
tsm-nose-hoover \
tsm-rf \
tsm-rossler \
tsm-rucklidge \
tsm-sj \
tsm-sprott-minimal \
tsm-sprott-thomas \
tsm-thomas \
tsm-van-der-pol \
tsm-wimol-banlue \
tsm-yu-wang
do
    echo " Building ${model}"
    build_tsm ${model} &
done

echo ""
echo " Building divergence"
${CC} -O3 $WARNINGS -o divergence divergence.c -lm -s &

echo " Building dual-test-dbg"
rm -f libdual-test-dbg
${CC} -O0 $WARNINGS -g -o libdual-test-dbg dual.c libdual-test.c -lm &

echo " Building libad-test-dbg"
rm -f libad-test-dbg
${CC} -O0 $WARNINGS -g -o libad-test-dbg taylor-ode.c ad.c libad-test.c -lm &

echo " Building libtaylor"
rm -f libtaylor.so taylor-ode.o
${CC} -O3 -DNDEBUG -c $WARNINGS -fpic taylor-ode.c && ${CC} -shared -o libtaylor.so taylor-ode.o -s &
#  Example: musl-gcc -O3 -DNDEBUG -L. -Wall -Wextra -o test tsm-lorenz.c main.c -ltaylor -lm -s
#  Example: LD_LIBRARY_PATH=. ./test 15 10 .01 10000 -15.8 -17.48 35.64 10 28 8 3 | gnuplot -p -e "splot '<cat' with lines"

echo " Building libdual"
rm -f libdual.so dual.o
${CC} -O3 -DNDEBUG -c $WARNINGS -fpic dual.c && ${CC} -shared -o libdual.so dual.o -s &

echo " Building libsymp"
rm -f libsymp.so symp.o
${CC} -O3 -DNDEBUG -c $WARNINGS -fpic symplectic.c && ${CC} -shared -o libsymp.so symplectic.o -s &

# wget -c ftp://ftp.madore.org/pub/madore/misc/kerr-image.c
# echo " Building kerr-image"
# gcc -o kerr-image kerr-image.c -O6 -Wall -std=c99 -pedantic -Wextra -Wno-unused-result -lm
# gcc -g -o kerr-image-dbg kerr-image.c -O0 -Wall -std=c99 -pedantic -Wextra -Wno-unused-result -lm

echo ""
wait

ls -lh --color libad-test-dbg libdual-test-dbg tsm-* h-* lib*.so divergence
echo ""
