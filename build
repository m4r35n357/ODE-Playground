#!/bin/sh
#
# Example:  ./clean; time -p ./build
#
# Example:  for i in .5 0 -.5; do ./libdual-test-dbg $i 1e-12; ./libad-test-dbg 10 $i 1e-12; done >/dev/null
#
#  (c) 2018-2022 m4r35n357@gmail.com (Ian Smith), for licencing see the LICENCE file

/usr/bin/ctags *.h *.c

WARNINGS='-pedantic -Wall -Wshadow -Wpointer-arith -Wcast-qual -Wstrict-prototypes -Wmissing-prototypes -Wextra -Wconversion -Wredundant-decls -Wmissing-declarations'

STD='c99'

case $1 in
    clang) WARNINGS="$WARNINGS -ffp-model=precise"
           CC="/usr/bin/clang -std=$STD $WARNINGS";;
      gcc) WARNINGS="$WARNINGS -Wunsuffixed-float-constants -frounding-math -fsignaling-nans"
           CC="/usr/bin/gcc -std=$STD $WARNINGS";;
        *) echo "Please choose a compiler!"; exit 1;;
esac
${CC} --version
echo ""

name='h-kerr-gen-particle'
echo " Building ${name}"
${CC} -O3 -o ${name}-std ${name}.c dual.c h-kerr.c -lm -s &

name='h-kerr-gen-light'
echo " Building ${name}"
${CC} -O3 -o ${name}-std ${name}.c -lm -s &

build_symp () {
    name=$1
    ${CC} -O3 -o ${name}-std ${name}.c symplectic.c dual.c -lm -s
}

for model in \
h-spring \
h-newton \
h-analysis
do
    echo " Building ${model}"
    build_symp ${model} &
done

echo ""
build_tsm () {
    name=$1
    ${CC} -O3 -o ${name}-std ${name}.c taylor-ode.c main-tsm.c -lm -s
    ${CC} -O3 -o ${name}-gl ${name}.c taylor-ode.c opengl.c ode-gl.c -lm -lGLEW -lglut -lGLU -lGL
}

for model in \
tsm-bouali \
tsm-burke-shaw \
tsm-cosmology \
tsm-genesio-tesi \
tsm-halvorsen \
tsm-isuc \
tsm-logistic \
tsm-kom \
tsm-lorenz \
tsm-lotka-volterra \
tsm-nose-hoover \
tsm-rf \
tsm-rossler \
tsm-rucklidge \
tsm-sj \
tsm-sprott-minimal \
tsm-sprott-thomas \
tsm-thomas \
tsm-van-der-pol \
tsm-wimol-banlue \
tsm-yu-wang
do
    echo " Building ${model}"
    build_tsm ${model} &
done

echo ""
echo " Building divergence"
${CC} -O3 -o divergence divergence.c -lm -s &

echo ""
echo " Building OpenGL N-body"
${CC} -O3 -o h-nbody-gl symplectic.c opengl.c h-nbody.c h-nbody-gl.c -lm -lGLEW -lglut -lGLU -lGL &

echo ""
echo " Building Kerr & Kerr GL"
${CC} -O3 -o h-kerr-std main-kerr.c dual.c symplectic.c h-kerr.c -lm &
${CC} -O3 -o h-kerr-gl h-kerr-gl.c dual.c symplectic.c opengl.c h-kerr.c -lm -lGLEW -lglut -lGLU -lGL &

echo ""
echo " Building dual-test-dbg"
rm -f libdual-test-dbg
${CC} -Og -g -o libdual-test-dbg dual.c libdual-test.c -lm &

echo " Building libad-test-dbg"
rm -f libad-test-dbg
${CC} -Og -g -o libad-test-dbg taylor-ode.c ad.c libad-test.c -lm &

# wget -c ftp://ftp.madore.org/pub/madore/misc/kerr-image.c
if [ -e kerr-image.c ]
then
    echo ""
    echo " Building kerr-image (third party code)"
    gcc -o kerr-image kerr-image.c -O6 -Wall -std=c99 -pedantic -Wextra -Wno-unused-result -lm &
    gcc -g -o kerr-image-dbg kerr-image.c -Og -Wall -std=c99 -pedantic -Wextra -Wno-unused-result -lm &
fi

echo ""
echo "Please wait . . ."
wait

ls -lh --color libad-test-dbg libdual-test-dbg tsm-* h-* divergence
echo ""
